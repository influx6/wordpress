<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
		>
<channel>
	<title>Comments on: CQRS Performance Engineering: Read vs Read/Write Models</title>
	<atom:link href="http://lostechies.com/derickbailey/2010/03/08/cqrs-performance-engineering-read-vs-read-write-models/feed/" rel="self" type="application/rss+xml" />
	<link>http://lostechies.com/derickbailey/2010/03/08/cqrs-performance-engineering-read-vs-read-write-models/</link>
	<description>Better Than Yesterday</description>
	<lastBuildDate>Mon, 05 Nov 2012 04:46:00 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>http://wordpress.org/?v=3.4.2</generator>
	<item>
		<title>By: derick.bailey</title>
		<link>http://lostechies.com/derickbailey/2010/03/08/cqrs-performance-engineering-read-vs-read-write-models/#comment-640</link>
		<dc:creator>derick.bailey</dc:creator>
		<pubDate>Tue, 09 Mar 2010 22:47:32 +0000</pubDate>
		<guid isPermaLink="false">/blogs/derickbailey/archive/2010/03/08/cqrs-performance-engineering-read-vs-read-write-models.aspx#comment-640</guid>
		<description>@Mihai,

Greg Young over at http://codebetter.com is considered the father of the term CQRS - he&#039;s got a blog post on how this name came about from last year. and Udi Dahan has done a significant amount of work within this name as well - his post on clarifying CQRS at the top of this article is tremendous and very long. 

in general, CQ_R_S is just CQS applied outside the confines and contexts of method calls. it&#039;s not a pattern or architecture, though. it&#039;s a principle of separating the command and query responsibilities in a system, at all levels of that system. this ranges from having an OLTP and OLAP database that are separate (separate schema at least) all the way to methods, classes, modules, frameworks, architectures, UI pattherns, etc.

there are a set of practices are are becoming &#039;standard&#039; in the CQRS family. Greg Young has several posts on these and lists some of the common ones in a recent blog post.</description>
		<content:encoded><![CDATA[<p>@Mihai,</p>
<p>Greg Young over at <a href="http://codebetter.com" rel="nofollow">http://codebetter.com</a> is considered the father of the term CQRS &#8211; he&#8217;s got a blog post on how this name came about from last year. and Udi Dahan has done a significant amount of work within this name as well &#8211; his post on clarifying CQRS at the top of this article is tremendous and very long. </p>
<p>in general, CQ_R_S is just CQS applied outside the confines and contexts of method calls. it&#8217;s not a pattern or architecture, though. it&#8217;s a principle of separating the command and query responsibilities in a system, at all levels of that system. this ranges from having an OLTP and OLAP database that are separate (separate schema at least) all the way to methods, classes, modules, frameworks, architectures, UI pattherns, etc.</p>
<p>there are a set of practices are are becoming &#8216;standard&#8217; in the CQRS family. Greg Young has several posts on these and lists some of the common ones in a recent blog post.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Mihai Lazar</title>
		<link>http://lostechies.com/derickbailey/2010/03/08/cqrs-performance-engineering-read-vs-read-write-models/#comment-639</link>
		<dc:creator>Mihai Lazar</dc:creator>
		<pubDate>Tue, 09 Mar 2010 12:14:08 +0000</pubDate>
		<guid isPermaLink="false">/blogs/derickbailey/archive/2010/03/08/cqrs-performance-engineering-read-vs-read-write-models.aspx#comment-639</guid>
		<description>There is always value in separating concerns.

My interest is in what/how you define CQRS. What posts or resource did you find usefull ?</description>
		<content:encoded><![CDATA[<p>There is always value in separating concerns.</p>
<p>My interest is in what/how you define CQRS. What posts or resource did you find usefull ?</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: thinkbeforecoding</title>
		<link>http://lostechies.com/derickbailey/2010/03/08/cqrs-performance-engineering-read-vs-read-write-models/#comment-638</link>
		<dc:creator>thinkbeforecoding</dc:creator>
		<pubDate>Tue, 09 Mar 2010 10:14:54 +0000</pubDate>
		<guid isPermaLink="false">/blogs/derickbailey/archive/2010/03/08/cqrs-performance-engineering-read-vs-read-write-models.aspx#comment-638</guid>
		<description>@harry&gt; In a CQRS system, you always make calculations on state change. So you will have in your DB the current &#039;rights&#039; of your user, no calculation needed.
If your &#039;rights&#039; set is static, this is not a problem, just make a view per right.
If it&#039;s dynamic, add an AccessRight column to your view, and filter using this an user Rights.

Usually, when your user rights are dynamic, there actually part of your domain and should be treated as any other state data.</description>
		<content:encoded><![CDATA[<p>@harry> In a CQRS system, you always make calculations on state change. So you will have in your DB the current &#8216;rights&#8217; of your user, no calculation needed.<br />
If your &#8216;rights&#8217; set is static, this is not a problem, just make a view per right.<br />
If it&#8217;s dynamic, add an AccessRight column to your view, and filter using this an user Rights.</p>
<p>Usually, when your user rights are dynamic, there actually part of your domain and should be treated as any other state data.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: J Healy</title>
		<link>http://lostechies.com/derickbailey/2010/03/08/cqrs-performance-engineering-read-vs-read-write-models/#comment-637</link>
		<dc:creator>J Healy</dc:creator>
		<pubDate>Tue, 09 Mar 2010 01:11:23 +0000</pubDate>
		<guid isPermaLink="false">/blogs/derickbailey/archive/2010/03/08/cqrs-performance-engineering-read-vs-read-write-models.aspx#comment-637</guid>
		<description>Good CQRS post. Depending on how it&#039;s structured, this sort of application &#039;reference&#039; data is often cached and filtered for successive dropdown selects</description>
		<content:encoded><![CDATA[<p>Good CQRS post. Depending on how it&#8217;s structured, this sort of application &#8216;reference&#8217; data is often cached and filtered for successive dropdown selects</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Harry M</title>
		<link>http://lostechies.com/derickbailey/2010/03/08/cqrs-performance-engineering-read-vs-read-write-models/#comment-636</link>
		<dc:creator>Harry M</dc:creator>
		<pubDate>Mon, 08 Mar 2010 17:58:42 +0000</pubDate>
		<guid isPermaLink="false">/blogs/derickbailey/archive/2010/03/08/cqrs-performance-engineering-read-vs-read-write-models.aspx#comment-636</guid>
		<description>Here&#039;s my problem with applying this as a globally reusable paradigm. I can see how this works in a lot of cases (particularly as the starting point of &#039;do the simplest thing that can possibly work&#039;)

The scary bit comes when theres a new business rule which filters the data which only applies to certain customers who have enabled certain settings and fulfil certain calculated criteria. At  this point your SQL query breaks down. What then, copy the query into a simple DTO, add a couple of filters to the data using a service (there are a couple of screens witneeding this filter you see)? 

Not only that, when you write data back to the store, you need to check the business rule from the service above in order to validate the request (we dont want people assigning themselves data they aren&#039;t allowed to see, right?). So do we share the service between  the read and write models, running against an interface implemented by the read-model-DTO and the write-model-request-object? Sounds like we&#039;ve crcreated some monster anemic domain, with linked objects.

I&#039;m not critising the approach taken in your post by the way, it seem the right tool for the job, really I&#039;m just trying to understand how CQRS works once you&#039;ve got a complex model with security and filtering that needs to be applied to both read and write. I&#039;m worried one may end up trying to write everything in more and more SQL queries (joining onto the Permissions and GroupPermissions tables) which are harder and harder to maintain.</description>
		<content:encoded><![CDATA[<p>Here&#8217;s my problem with applying this as a globally reusable paradigm. I can see how this works in a lot of cases (particularly as the starting point of &#8216;do the simplest thing that can possibly work&#8217;)</p>
<p>The scary bit comes when theres a new business rule which filters the data which only applies to certain customers who have enabled certain settings and fulfil certain calculated criteria. At  this point your SQL query breaks down. What then, copy the query into a simple DTO, add a couple of filters to the data using a service (there are a couple of screens witneeding this filter you see)? </p>
<p>Not only that, when you write data back to the store, you need to check the business rule from the service above in order to validate the request (we dont want people assigning themselves data they aren&#8217;t allowed to see, right?). So do we share the service between  the read and write models, running against an interface implemented by the read-model-DTO and the write-model-request-object? Sounds like we&#8217;ve crcreated some monster anemic domain, with linked objects.</p>
<p>I&#8217;m not critising the approach taken in your post by the way, it seem the right tool for the job, really I&#8217;m just trying to understand how CQRS works once you&#8217;ve got a complex model with security and filtering that needs to be applied to both read and write. I&#8217;m worried one may end up trying to write everything in more and more SQL queries (joining onto the Permissions and GroupPermissions tables) which are harder and harder to maintain.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: thinkbeforecoding</title>
		<link>http://lostechies.com/derickbailey/2010/03/08/cqrs-performance-engineering-read-vs-read-write-models/#comment-635</link>
		<dc:creator>thinkbeforecoding</dc:creator>
		<pubDate>Mon, 08 Mar 2010 16:59:24 +0000</pubDate>
		<guid isPermaLink="false">/blogs/derickbailey/archive/2010/03/08/cqrs-performance-engineering-read-vs-read-write-models.aspx#comment-635</guid>
		<description>I really like the term of Persitent View Model (from Udi Dahan).
Just put the data needed by this view in this table, and you got it. No need to apply any logic when reading, just get the data.
The good thing is that your data change a lot less than it&#039;s read, so the logic used to transform data is applied only once per change instead of once per view.

I noticed you said you have a readonly service for queries and a read/write service for commands. You can easily remove the read from commands, and get a writeonly service from commands.</description>
		<content:encoded><![CDATA[<p>I really like the term of Persitent View Model (from Udi Dahan).<br />
Just put the data needed by this view in this table, and you got it. No need to apply any logic when reading, just get the data.<br />
The good thing is that your data change a lot less than it&#8217;s read, so the logic used to transform data is applied only once per change instead of once per view.</p>
<p>I noticed you said you have a readonly service for queries and a read/write service for commands. You can easily remove the read from commands, and get a writeonly service from commands.</p>
]]></content:encoded>
	</item>
</channel>
</rss>

<!-- Performance optimized by W3 Total Cache. Learn more: http://www.w3-edge.com/wordpress-plugins/

Page Caching using disk: enhanced

Served from: lostechies.com @ 2012-11-05 09:45:28 -->